rule.put('F',"F+F-F-FF+F+F-F");
LSystem f = new LSystem("F+F+F+F", 90, rule);


rule.put('F',"FF+F-F+F");
LSystem f = new LSystem("F+F+F+F", 90, rule);


rule.put('F',"F-FF+FF+F+F-F-FF+F+F-F-FF-FF+F");
LSystem f = new LSystem("F+F+F+F", 90, rule);

rule.put('X',"XF+F+XF-F-F-XF-F+F+F-F+F+F-X");
LSystem f= new LSystem("XF+F+XF+F+XF+F", 60, rule);


rule.put('F',"FF");
rule.put('X', "F-[[X]+X]+F[+FX]-X");
LSystem f= new LSystem("X", (float) 22.5, rule);

rule.put('F',"F[+F]F");
LSystem f=new LSystem("F", 10, rule);

dragon
rule.put('l', "l+rF+");
rule.put('r', "-Fl-r");
LSystem f= new LSystem("Fl", 90, rule);

rule.put('F',"FF+F-F+F");
LSystem f = new LSystem("F+F+F+F", 60, rule);


rule.put('X',"XF+F+XF-F-F-XF-F+F+F-F+F+F-X");
LSystem f= new LSystem("XF+F+XF+F+XF+F", 60, rule);